ROADMAP

1
shoot() soundeffect
die() soundeffect

2
Learn Windows and POSIX/GNU handles to change colours
* brown = player
* red = enemies
* yellow = walls
* dark yellow = doors and stairs
* green = tree
* dark grey = walls
* grey = background
* blue = items
* dark blue = water

* include player_x_pos and y pos and previous in all saves and loads
* All saves to savefile append with player_ to diffrentiate between enemies skills

* On Win compare items
* item_store() needs to record a new copy of global vector of item names
* on win condition compare previous inventory vector with new inventory vector

* enemy ai movement, for loop, alogirth name search do x

* collission_logic() not stopping player
* change lives to vitality
* random_enemies()
* random_items()

* enemy_ai_logic() - add virtual skill polymorphic class to enemy class

* money should be it's own class, with generation, xpos, collision logic etc.,

* river obstacle that connects to each other from one side of map to another
* lake obstacle, 4 pools in a square

* fix save()

* player_object member active_skill = shoot()
* write skills_header()
* write skills to file ???
* check_skills = show available skills()
*    selecting a skill updates active_skill member

4 - PDF Parsing
To read and extract text from a PDF file using C++, you can utilize a PDF
parsing library such as Poppler or MuPDF. These libraries provide APIs
to access and manipulate PDF documents.
In game book - copy of early rig veda and gathas, and shanameh

* Rakashaa beastiary
* Realife Magic performed
* Rituals
* Sacrifices
* Yugas /prayers
* Yoga
* Vedic maths
* Sanskrit programming - Bonus


6
Locale including
* Farsi
* Sanskrit
* Japanese
* Chinese
* English
* German

8
create fireball()
fireball() sfx

9
setup_world()
setup_desert()
setup_plains()
setup_oasis()
setup_city()
setup_plains_village()
setup_mountain_village()
setup_enemy_camp()

draw_world()
draw_desert()
draw_plains()
draw_oasis()
draw_city()
draw_plains_village()
draw_mountain_village()
draw_enemy_camp()



x
Stairs class
generate upstairs() and downstairs()
draw stairs
collision logic
random_generate_npc()

10
death counter variable
logic when xp reaches x do levelup()
levelup()
{
    increases stats by x
}


11
* Skills assigned numbers e.g. numbers 1 = shoot(), 2 = fireball()
* change skills with check skills() which changes input SPACE_BAR to new skill selected
on Windows and Unix like OS
* update check_skills with achievements (check last roadmap)
* Specific scroll item drop with rand() drawn to buffer
* scroll item adds new skill



13
Level editing mode

14
* Official website
* Curl official website to check for updates and if so prompt to Download in the main
if not cout no updates available.
 
15
World map option - places to visit
* Home
* Shop
* World map